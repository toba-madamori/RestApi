openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/:
    get:
      operationId: listBlogModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    post:
      operationId: createBlogModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
  /api/v1/{format}:
    get:
      operationId: retrieveBlogModel
      description: ''
      parameters:
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    post:
      operationId: createBlogModel
      description: ''
      parameters:
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
  /api/v1/post-detail/{id}:
    get:
      operationId: retrieveBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    put:
      operationId: updateBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/post-detail/{id}{format}:
    get:
      operationId: retrieveBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    put:
      operationId: updateBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBlogModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this blog model.
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/user:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/user{format}:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/user/{id}:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/user/{id}{format}:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: format
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/user/:
    get:
      operationId: retrieveUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/login/:
    post:
      operationId: createLogin
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/registration/:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/registration/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/registration/resend-email/:
    post:
      operationId: createResendEmailVerification
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
      tags:
      - api
components:
  schemas:
    Blog:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 100
        body:
          type: string
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        date:
          type: string
          format: date-time
          readOnly: true
        author:
          type: string
          readOnly: true
      required:
      - name
      - title
      - body
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        blogs_id:
          type: array
          items:
            type: integer
      required:
      - username
      - blogs_id
    UserDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - password1
      - password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
